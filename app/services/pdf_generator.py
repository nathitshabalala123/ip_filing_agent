import os
from datetime import datetime
from typing import Dict, Tuple
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib import colors
from ..config import settings


def _ensure_generated_dir() -> str:
    os.makedirs(settings.generated_dir, exist_ok=True)
    return settings.generated_dir


def _doc(filename: str) -> Tuple[SimpleDocTemplate, list]:
    styles = getSampleStyleSheet()
    doc = SimpleDocTemplate(filename, pagesize=A4)
    story: list = []
    return doc, story


def _build(doc: SimpleDocTemplate, story: list) -> None:
    doc.build(story)


def generate_tm1_pdf(data: Dict) -> str:
    folder = _ensure_generated_dir()
    filename = os.path.join(folder, f"TM1_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf")
    doc, story = _doc(filename)
    styles = getSampleStyleSheet()

    story.append(Paragraph("CIPC Trademark Application - TM1 (Assistive Draft)", styles['Title']))
    story.append(Paragraph("Not a legal document. For self-filing guidance only.", styles['Italic']))
    story.append(Spacer(1, 12))

    applicant = data.get("applicant", {})
    rows = [
        ["Applicant Full Name", applicant.get("full_name", "")],
        ["Address Line 1", applicant.get("address_line_1", "")],
        ["Address Line 2", applicant.get("address_line_2", "")],
        ["City", applicant.get("city", "")],
        ["Province", applicant.get("province", "")],
        ["Postal Code", applicant.get("postal_code", "")],
        ["Country", applicant.get("country", "South Africa")],
        ["Email", applicant.get("email", "")],
        ["Phone", applicant.get("phone_number", "")],
        ["Mark (Word)", data.get("mark_text", "")],
        ["NICE Classes", ", ".join(map(str, data.get("nice_classes", [])))],
        ["Slogan (if any)", data.get("slogan", "")],
    ]

    table = Table(rows, hAlign='LEFT', colWidths=[180, 340])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.lightgrey),
        ('GRID', (0, 0), (-1, -1), 0.5, colors.grey),
        ('VALIGN', (0, 0), (-1, -1), 'TOP'),
        ('FONTNAME', (0, 0), (-1, -1), 'Helvetica'),
    ]))
    story.append(table)

    story.append(Spacer(1, 16))
    story.append(Paragraph(
        "Disclaimer: This is a preparatory document generated by an AI assistant. "
        "You must review and file on the official CIPC portal. This is not legal advice.",
        styles['BodyText']
    ))

    _build(doc, story)
    return filename


def generate_poa_pdf(data: Dict) -> str:
    folder = _ensure_generated_dir()
    filename = os.path.join(folder, f"POA_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf")
    doc, story = _doc(filename)
    styles = getSampleStyleSheet()

    story.append(Paragraph("Power of Attorney (Self-Authorization)", styles['Title']))
    story.append(Paragraph("For use when self-filing on CIPC portal", styles['Italic']))
    story.append(Spacer(1, 12))

    applicant = data.get("applicant", {})
    paragraphs = [
        f"I, {applicant.get('full_name','')}, hereby authorize myself to act in respect of the trademark application for: {data.get('mark_text','')}.",
        "This document is provided for convenience and may not be required in all cases. Please follow CIPC instructions.",
    ]
    for p in paragraphs:
        story.append(Paragraph(p, styles['BodyText']))
        story.append(Spacer(1, 8))

    story.append(Spacer(1, 24))
    story.append(Paragraph("Signature: ______________________________  Date: __________________", styles['BodyText']))

    _build(doc, story)
    return filename


def generate_filing_guide_pdf(data: Dict) -> str:
    folder = _ensure_generated_dir()
    filename = os.path.join(folder, f"FILING_GUIDE_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf")
    doc, story = _doc(filename)
    styles = getSampleStyleSheet()

    story.append(Paragraph("CIPC Filing Guide (Trademark - TM1)", styles['Title']))
    story.append(Paragraph("Step-by-step instructions to self-file on CIPC e-services.", styles['Italic']))
    story.append(Spacer(1, 12))

    steps = [
        "Create/Log into your CIPC e-services account.",
        "Navigate to Trademarks filing section.",
        "Upload the TM1 (Assistive Draft) details by entering them into the online forms as requested.",
        "Upload the Power of Attorney if requested.",
        "Pay the official CIPC filing fee.",
        "Save your reference number and confirmation receipts.",
    ]

    for idx, step in enumerate(steps, start=1):
        story.append(Paragraph(f"{idx}. {step}", styles['BodyText']))
        story.append(Spacer(1, 6))

    story.append(Spacer(1, 16))
    story.append(Paragraph(
        "Disclaimer: This guide is for informational purposes only and may not reflect changes to the CIPC portal.",
        styles['BodyText']
    ))

    _build(doc, story)
    return filename 